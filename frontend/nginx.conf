user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80;
        listen       [::]:80;
        server_name  _;
        root   /home/ec2-user/frontend/public;

        #health check
        location /health {
        default_type text/html;
        return 200 "<!DOCTYPE html><p>Web Tier Health Check</p>\n";
        }

        location / {
        index index.html index.htm
        try_files $uri /index.html;
        }

        location /time {
        try_files $uri $uri/ /time.html;
        }

        location /countries {
            try_files $uri $uri/ /countries.html;
        }

        # Reverse proxy configuration to map frontend request to backend service via the ELB DNS
        location /api/ {
        proxy_pass http://<ALB_DNS_PLACEHOLDER>:9662;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

        # location /health {
        #     try_files $uri $uri/ /health.html;
        # }

        #proxy for internal lb
        # location /api/{
        #         proxy_pass http://<Your-Internal-LoadBalancer-DNS>:80/;
        # }


    }

}